name: CI

on:
    pull_request:
        types: [synchronize, opened, reopened, ready_for_review]

jobs:
    server:
        runs-on: ubuntu-latest
        if: github.event.pull_request.draft == false
        services:
            redis:
                image: redis
                ports:
                    - 6379:6379
            postgres:
                image: postgres
                ports:
                    - 5432:5432
                env:
                    POSTGRES_USER: buckless
                    POSTGRES_PASSWORD: buckless
                    POSTGRES_DB: buckless_test
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install node
              uses: actions/setup-node@v1
              with:
                node-version: '11.x'
            - name: Install PCSC dependencies
              run: sudo apt-get install libpcsclite-dev libpcsclite1 pcscd -y
            - name: Get yarn cache
              id: yarn-cache-folder
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1
              id: yarn-cache
              with:
                path: ${{ steps.yarn-cache-folder.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Build configuration
              run: |
                cp packages/config/config.json.example packages/config/config.json
                yarn run config build
            - name: Lint
              run: cd packages/server && yarn lint
            - name: Test
              run: cd packages/server && yarn test

    manager:
        runs-on: ubuntu-latest
        if: github.event.pull_request.draft == false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install node
              uses: actions/setup-node@v1
              with:
                node-version: '11.x'
            - name: Install PCSC dependencies
              run: sudo apt-get install libpcsclite-dev libpcsclite1 pcscd -y
            - name: Get yarn cache
              id: yarn-cache-folder
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1
              id: yarn-cache
              with:
                path: ${{ steps.yarn-cache-folder.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Build configuration
              run: |
                cp packages/config/config.json.example packages/config/config.json
                yarn run config build
            - name: Lint
              run: cd packages/manager && yarn lint
            - name: Build
              run: cd packages/manager && yarn build

    admin:
        runs-on: ubuntu-latest
        if: github.event.pull_request.draft == false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install node
              uses: actions/setup-node@v1
              with:
                node-version: '11.x'
            - name: Install PCSC dependencies
              run: sudo apt-get install libpcsclite-dev libpcsclite1 pcscd -y
            - name: Get yarn cache
              id: yarn-cache-folder
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1
              id: yarn-cache
              with:
                path: ${{ steps.yarn-cache-folder.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Build configuration
              run: |
                cp packages/config/config.json.example packages/config/config.json
                yarn run config build
            - name: Lint
              run: cd packages/admin && yarn lint
            - name: Build
              run: cd packages/admin && yarn build

    client:
        runs-on: ubuntu-latest
        if: github.event.pull_request.draft == false
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install node
              uses: actions/setup-node@v1
              with:
                node-version: '11.x'
            - name: Install PCSC dependencies
              run: sudo apt-get install libpcsclite-dev libpcsclite1 pcscd -y
            - name: Get yarn cache
              id: yarn-cache-folder
              run: echo "::set-output name=dir::$(yarn cache dir)"
            - uses: actions/cache@v1
              id: yarn-cache
              with:
                path: ${{ steps.yarn-cache-folder.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                  ${{ runner.os }}-yarn-
            - name: Install dependencies
              run: yarn
            - name: Build configuration
              run: |
                cp packages/config/config.json.example packages/config/config.json
                yarn run config build
            - name: Lint
              run: cd packages/client && yarn lint
            - name: Build
              run: cd packages/client && yarn build:browser
