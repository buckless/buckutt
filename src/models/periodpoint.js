import thinky from '../lib/thinky';

const type = thinky.type;

const PeriodPoint = thinky.createModel('PeriodPoint', {
    // Optional => not specified in bodies but generated by RethinkDB
    id       : type.string().optional(),
    createdAt: type.date().default(new Date()),
    editedAt : Date,
    isRemoved: type.boolean().default(false),
    // Force Thinky to show thoses additional fields that would be cut by enforce_extra
    Period_id: type.string().optional(),
    Point_id : type.string().optional()
}, {
    enforce_missing: true,
    enforce_extra  : 'remove',
    enforce_type   : 'strict'
});

PeriodPoint.pre('save', function (next) {
    this.editedAt = new Date();
    next();
});

PeriodPoint.ensureIndex('createdAt');
PeriodPoint.ensureIndex('editedAt');

PeriodPoint.associate = models => {
    models.PeriodPoint.belongsTo(models.Point, 'point', 'id', 'Point_id');
    models.PeriodPoint.belongsTo(models.Period, 'period', 'id', 'Period_id');
    models.PeriodPoint.hasAndBelongsToMany(models.Device, 'devices', 'id', 'id');
};

export default PeriodPoint;
