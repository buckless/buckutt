const thinky = require('../lib/thinky');

const type = thinky.type;

const Promotion = thinky.createModel('Promotion', {
    // Optional => not specified in bodies but generated by RethinkDB
    id       : type.string().optional(),
    name     : String,
    createdAt: type.date().default(() => new Date()),
    editedAt : Date,
    isRemoved: type.boolean().default(false)
}, {
    enforce_missing: true,
    enforce_extra  : 'remove',
    enforce_type   : 'strict'
});

Promotion.pre('save', function preSave(next) {
    this.editedAt = new Date();
    next();
});

Promotion.ensureIndex('name');
Promotion.ensureIndex('createdAt');
Promotion.ensureIndex('editedAt');

Promotion.associate = (models) => {
    models.Promotion.hasAndBelongsToMany(models.Price, 'prices', 'id', 'id');
    // n:n instead of 1:n to allow one promotion containing multiple times the same article
    models.Promotion.hasAndBelongsToMany(models.Article, 'articles', 'id', 'id');
    // n:n instead of 1:n to allow one promotion containing multiple times the same set
    models.Promotion.hasAndBelongsToMany(models.Set, 'sets', 'id', 'id');
    models.Promotion.hasMany(models.Purchase, 'purchases', 'id', 'Promotion_id');
};

module.exports = Promotion;
