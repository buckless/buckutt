const thinky = require('../lib/thinky');

const type = thinky.type;

const Article = thinky.createModel('Article', {
    // Optional => not specified in bodies but generated by RethinkDB
    id       : type.string().optional(),
    name     : String,
    stock    : type.number().default(0),
    image    : type.string().optional(),
    // Alcohol amount (Alcool unit or just article maximum sells)
    alcohol  : type.number().default(0),
    // Optional VAT tax
    vat      : type.number().default(0),
    createdAt: type.date().default(new Date()),
    editedAt : Date,
    isRemoved: type.boolean().default(false)
}, {
    enforce_missing: true,
    enforce_extra  : 'remove',
    enforce_type   : 'strict'
});

Article.pre('save', function preSave(next) {
    this.editedAt = new Date();
    next();
});

Article.ensureIndex('name');
Article.ensureIndex('createdAt');
Article.ensureIndex('editedAt');

Article.associate = (models) => {
    models.Article.hasAndBelongsToMany(models.Category, 'categories', 'id', 'id');
    // n:n instead of 1:n to allow one set containing multiple times the same article
    models.Article.hasAndBelongsToMany(models.Set, 'sets', 'id', 'id');
    // n:n instead of 1:n to allow one promotion containing multiple times the same article
    models.Article.hasAndBelongsToMany(models.Promotion, 'promotions', 'id', 'id');
    models.Article.hasAndBelongsToMany(models.Purchase, 'purchases', 'id', 'id');
    models.Article.hasAndBelongsToMany(models.Price, 'prices', 'id', 'id');
};

module.exports = Article;
