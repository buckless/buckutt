const thinky = require('../lib/thinky');

const type = thinky.type;

const Period = thinky.createModel('Period', {
    // Optional => not specified in bodies but generated by RethinkDB
    id       : type.string().optional(),
    name     : String,
    start    : Date,
    end      : Date,
    createdAt: type.date().default(() => new Date()),
    editedAt : Date,
    isRemoved: type.boolean().default(false),
    Event_id : type.string().optional()
}, {
    enforce_missing: true,
    enforce_extra  : 'remove',
    enforce_type   : 'strict'
});

Period.pre('save', function preSave(next) {
    this.editedAt = new Date();
    next();
});

Period.ensureIndex('name');
Period.ensureIndex('start');
Period.ensureIndex('end');
Period.ensureIndex('createdAt');
Period.ensureIndex('editedAt');

Period.associate = (models) => {
    models.Period.belongsTo(models.Event, 'event', 'Event_id', 'id');
    models.Period.hasMany(models.PeriodPoint, 'periodPoints', 'id', 'Period_id');
    models.Period.hasMany(models.GroupPeriod, 'groupPeriods', 'id', 'Period_id');
    models.Period.hasMany(models.Price, 'prices', 'id', 'Period_id');
    models.Period.hasMany(models.Right, 'rights', 'id', 'Period_id');
};

module.exports = Period;
